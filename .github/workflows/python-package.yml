# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  ACTIVATE_VENV: source $(poetry env info -p)/bin/activate
  WHEEL_PATH: ./dist/rinohtype-*.whl

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      TOXENV: check
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: 1.0.10
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Test with tox
      run: |
        source $(poetry env info -p)/bin/activate
        tox -v
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
#        python-version: [3.6, 3.7, 3.8, 3.9.0-alpha - 3.9.0, pypy3]
        poetry-version: [1.0.10]
        os: [ubuntu-latest, macos-latest, windows-latest]
        env:
          - DIST: sdist
            WITH_COVERAGE: 1
          - DIST: wheel
            WITH_COVERAGE: 0
          - TOXENV: regression
            WITH_COVERAGE: 1
    runs-on: ${{ matrix.os }}
    env: ${{ matrix.env }}
    steps:
    - name: Windows-specific settings
      if: startsWith(runner.os, 'Windows')
      run: |
        echo '::set-env name=ACTIVATE_VENV::. "$(poetry env info -p)\Scripts\Activate.ps1"'
        echo '::set-env name=WHEEL_PATH::(Get-Item ./dist/rinohtype-*.whl)'
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry ${{ matrix.poetry-version }}
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Get cache dirs
      id: cache-dirs
      run: |
        echo "::set-output name=poetry::$(poetry config cache-dir)"
        echo "::set-output name=pip::$(pip cache dir)"
    - name: Cache multiple paths
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.cache-dirs.outputs.poetry }}
          ${{ steps.cache-dirs.outputs.pip }}
        key: ${{ runner.os }}-python${{ matrix.python-version }}-poetry${{ matrix.poetry-version }}
    - name: Install dependencies
      run: |
        poetry install --no-root
    - name: Create wheel
      if: env.DIST == 'wheel'
      run: |
        ${{ env.ACTIVATE_VENV }}
        python setup.py bdist_wheel
        echo '::set-env name=INSTALLPKG::--installpkg ${{ env.WHEEL_PATH }}'
    - name: Test with tox
      run: |
        ${{ env.ACTIVATE_VENV }}
        pip install tox-gh-actions
        tox -v ${{ env.INSTALLPKG }} -- -s
